是时候设计一个分布式服务框架了。我先将它定名为 Hasor-RSF，“RSF”为 Remote Service Framework 的缩写。

RSF的目的是为了提供一种高效的远程服务访问方式，例如“A机器访问在B机器上的一个服务”。当然首先它是运行在Java上的，但是我并不希望 Java 成为 RSF的唯一平台。

它应该是分布式的，就是说服务 A 可能会分布在若干台机器内。 当我的应用打算调用这个服务时我应该可以在这若干服务提供的机器上随机调用。这样做的好处是有助于高并发、高访问、高可用。 

RSF 的本质其实就是 RPC 那么我们可以先对比一下 RPC 里都有什么可以被我们拿来选用。下面列出来的只是其中一些我相信聪明的朋友们会列举出更多的解决方案，我也敢保证你们知道的比我还多。
 
    关键5层：
    Netty，其中位于最下层的网通信部分 RSF 采用 Netty 实现。Netty 是一款非常优秀的网络通信框架，使用 Netty 可以帮助 RSF 减少大量底层网络上的代码开发。这也就意味着 RSF 将采用 Selector 方式实现异步IO。

    Protocol，协议层。该层主要的目的是负责解释翻译 RSF 数据包，并将 RSF 数据包转意成为 Request 和 Response 对象。协议层可以是一个协议栈，这就意味您可以通过 RTMP 、或者其它自定义网络协议传输 RSF 数据包。

    Request/Response层，请求响应层。这个在这个层中，RSF 脱离了底层网络方面的特性将每次调用请求对象化为一个 Request 对象，并且将调用结果封装成为一个 Response 对象。这种编程模式和 Web 很像。

    调度层，这一层最为复杂。它负责管理本地 RSF 服务的注册，远程传输对象序列化方式的管理，并且还要负责实现其它更加复杂的功能。

    接口层，这一层是最终 RSF 暴露给业务系统的接口，将会由两个类提供。一个代表服务生产着，另一个是服务消费者